plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'warehouse-cli'
version = '0.0.1-SNAPSHOT'
description = 'Projeto Warehouse '

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	    implementation 'org.springframework.boot:spring-boot-starter-websocket'
	    implementation 'org.springframework.boot:spring-boot-starter-amqp'	
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

// Adiciona esta tarefa para forçar a JVM a usar UTF-8
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// E força o 'bootRun' a usar UTF-8 também
bootRun {
    jvmArgs = ["-Defile.encoding=UTF-8"]
}

// Testes Unitários
tasks.named('test') {
	useJUnitPlatform()
}

