plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.storefront-cli'
version = '0.0.1-SNAPSHOT'
description = 'Projeto Storefront-cli'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-cache' // Cache
    implementation 'com.github.ben-manes.caffeine:caffeine' // Implementação do Cache

	// WebJars para o frontend
    implementation 'org.webjars:webjars-locator-core'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	
}

// Adiciona esta tarefa para forçar a JVM a usar UTF-8
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// E força o 'bootRun' a usar UTF-8 também
bootRun {
    jvmArgs = ["-Defile.encoding=UTF-8"]
}

// Testes unitários
tasks.named('test') {
	useJUnitPlatform()
}